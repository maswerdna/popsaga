{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Seed","props","className","used","onClick","name","App","seeds","push","Math","floor","random","length","Set","useState","filter","even","target","active","popped","boxes","setBoxes","ceil","duration","setDuration","won","setWon","lost","setLost","start","setStart","useEffect","timer","setInterval","clearInterval","map","box","find","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAEA,SAASA,EAAKC,GACZ,OAAO,qBAAKC,UAAW,OAAUD,EAAME,KAAOC,QAASH,EAAMG,QAAtD,SAAgEH,EAAMI,OAuDhEC,MArDf,WACE,IAAIC,EAAQ,GACZ,GACEA,EAAMC,KAAKC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,SACrCJ,EAAMK,OAAS,IACxBL,EAAK,YAAO,IAAIM,IAAIN,IALP,MAMIO,mBAASP,EAAMQ,QAAO,SAAAC,GAAI,OAAIA,EAAO,IAAM,KAAGJ,QAAxDK,EANM,sBAOaH,mBAAS,CAACI,OAAQX,EAAOY,OAAQ,KAP9C,mBAONC,EAPM,KAOCC,EAPD,OAQmBP,mBAASL,KAAKa,KAAc,IAATL,IARtC,mBAQNM,EARM,KAQIC,EARJ,OASSV,oBAAS,GATlB,mBASNW,EATM,KASDC,EATC,OAUWZ,oBAAS,GAVpB,mBAUNa,EAVM,KAUAC,EAVA,OAWad,oBAAS,GAXtB,mBAWNe,EAXM,KAWCC,EAXD,KA+Bb,OAbAC,qBAAU,WACNL,EAAOT,IAAWG,EAAMD,OAAOP,UAChC,CAACK,EAAQG,IACZW,qBAAU,WACR,GAAGF,EAAO,CACR,IAAMG,EAAQC,aAAY,WACpBR,EAAKS,cAAcF,GACD,IAAbT,GAAiBK,GAAQ,GAAOM,cAAcF,IAClDR,GAAY,SAAAD,GAAQ,OAAIA,EAAW,OACvC,KACH,OAAO,kBAAMW,cAAcF,OAE5B,CAACP,EAAKF,EAAUM,IAEjB,sBAAK3B,UAAU,aAAf,UACE,sBAAKA,UAAU,QAAf,UAAwBqB,GAAWM,GAAS,qBAAK3B,UAAU,QAAQE,QAAS,kBAAM0B,GAAS,IAA/C,sBAC5C,qBAAK5B,UAAU,WAAf,SAEIuB,EAAM,qCAAE,0CAAgB,qBAAKvB,UAAU,cAAf,wBACxByB,EAAO,qCAAE,0CAAgB,qBAAKzB,UAAU,YAAf,yBACzBe,EAASG,EAAMD,OAAOP,OAAS,EAC7B,qCAAE,wDAA8B,sBAAKV,UAAU,aAAf,UAA6Be,EAASG,EAAMD,OAAOP,OAAnD,cAA2E,KAGjH,qBAAKV,UAAW,aAAe2B,EAAmB,GAAX,UAAvC,SACET,EAAMF,OAAOiB,KAAI,SAAAC,GAAG,OAAI,cAACpC,EAAD,CAEtBG,KAAOiB,EAAMD,OAAOkB,MAAK,SAAAC,GAAC,OAAIA,IAAMF,KAAQ,QAAU,GACtD/B,KAAM+B,EACNhC,QAAS,kBAnCGkC,EAmCeF,QAlC5BP,GAASJ,GAAOE,GAAqB,IAAbJ,GACzBe,EAAI,IAAM,GACZjB,EAAS,2BAAID,GAAL,IAAYD,OAAO,GAAD,mBAAMC,EAAMD,QAAZ,CAAoBmB,QAH9B,IAAAA,IAgCPF,YCrCAG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a5d85bd9.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nfunction Seed(props) {\n  return <div className={\"seed\" + (props.used)} onClick={props.onClick}>{props.name}</div>\n}\nfunction App() {\n  let seeds = [];\n  do {\n    seeds.push(Math.floor(Math.random() * 50) + 1);\n  } while (seeds.length < 20);\n  seeds = [...new Set(seeds)];\n  const [target] = useState(seeds.filter(even => even % 2 === 0).length);\n  const [boxes, setBoxes] = useState({active: seeds, popped: []});\n  const [duration, setDuration] = useState(Math.ceil(target * 0.85));\n  const [won, setWon] = useState(false);\n  const [lost, setLost] = useState(false);\n  const [start, setStart] = useState(false);\n  const buttonClick = i => {\n    if (!start || won || lost || duration === 0) return;\n    if (i % 2 === 0) {\n      setBoxes({...boxes, popped: [...boxes.popped, i]});\n    }\n  }\n  useEffect(() => {\n      setWon(target === boxes.popped.length);\n  }, [target, boxes]);\n  useEffect(() => {\n    if(start) {\n      const timer = setInterval(() => {\n        if (won) clearInterval(timer);\n        else if (duration === 0) {setLost(true); clearInterval(timer)}\n        else setDuration(duration => duration - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [won, duration, start]);\n  return (\n    <div className=\"game-board\">\n      <div className=\"timer\">{duration}{!start && <div className=\"start\" onClick={() => setStart(true)}>START</div>}</div>\n      <div className=\"info-box\">\n        {\n          won ? <><p>Game Over</p><div className=\"state green\">You Won</div></> :\n          lost ? <><p>Game Over</p><div className=\"state red\">You lost</div></> :\n          target - boxes.popped.length > 0 ?\n            <><p>Remove all even numbers</p><div className=\"state blue\">{target - boxes.popped.length} More</div></> : \"\"\n        }\n      </div>\n      <div className={\"seeds-box\"+ (!start ? ' ready' : '')}>{\n        boxes.active.map(box => <Seed\n          key={box} \n          used={(boxes.popped.find(i => i === box)) ? \" used\" : \"\"} \n          name={box} \n          onClick={() => buttonClick(box)} />\n        )\n      }</div>\n    </div>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}